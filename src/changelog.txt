Electronic Enigma Machine Changelog
===================================

Version 0.7.0 7th Sept 2020 [DEV]
First version that will give the correct answer when a simple configuration is
applied.
* [BUG] Fixed error in Enigma1 rotor II
* [BUG] Fixed bug in reflector.
* [MOD] Refactoring done on both enigma_machine.py modules.
* [MOD] Modified Enigma machine module to tidy up, whilst debugging.
* [BUG] Fixed rotor stepping not detecting correct position.
* [BUG] Rotor factory wasn't returning None when it detected a duplicate input
        or output pin.
Unit Test Coverage:
- EnigmaMachine    0%
- MachineSetup     0%
- Plugboard        100%
- Reflector        100%
- ReflectorFactory 0%
- Rotor            100%
- RotorContact     100%
- RotorFactory     100%


Version 0.6.0-beta 4th Sept 2020
* [MOD] Module renamed to conform with PEP8 standard:
  - Reflector.py => reflector.py
  - ReflectorFactory.py => reflector_factory.py
  - Version.py => version.py
  - Plugboard.py => plugboard.py
  - EnigmaMachine.py => enigma_machine.py
  - MachineSetup.py => machine_setup.py
* [MOD] Changed reflector data format from XML to JSON.
* [ADD] Created a JSON enabled class to reduce repetative json loading code.
* [MOD] Cleaned up Plugboard class.
* [ADD] New code to define and implement different Enigma model types.
* [DEL] Removed Core/machine_setup.py as no longer used.
* [MOD] Started to clean up enigma_machine.py and Core/enigma_machine.py.


Version 0.6.0-alpha 3rd Sept 2020
First part of the major code refactoring, the code base is currently not in a
usable state, these changes concentrated on the rotor code. 
* [MOD] Module renamed to conform with PEP8 standard:
  - Rotor.py => rotor.py
  - RotorFactory.py => rotor_factory.py
  - RotorContact.py => rotor_contact.py  
* [MOD] Changed RotorContact class to an enumeration, greatly simplifying it.
* [MOD] Changes to RotorFactory class:
  - All methods and attribute names comply with PEP8.
  - Rotor wiring configuration files format changed to JSON.
  - The factory now only builds one rotor at a time.
* [MOD] Changes to Rotor class:
  - All methods and attribute names comply with PEP8.
  - Commented the code to make process of how getting the forward or backwards
    circuit entry is done as I had to look it back up myself...